{"mappings":"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","sources":["src/util.js","src/framework.js","src/frameworks/cornerstone2d.js","src/frameworks/niivue.js","src/frameworks/openseadragon.js","src/frameworks/xtk.js","src/frameworks/papaya.js","src/index.js","src/boostlet.js"],"sourcesContent":["import {Framework} from './framework.js';\nimport {Cornerstone2D} from './frameworks/cornerstone2d.js';\nimport {NiiVue} from './frameworks/niivue.js';\nimport { OpenSeaDragon } from './frameworks/openseadragon.js';\nimport { Xtk } from './frameworks/xtk.js';\nimport { Papaya } from './frameworks/papaya.js';\n\nexport class Util {\n  \n  static detect_framework() {\n\n    let framework = null;\n\n    if (Util.is_defined(window.nv)) {\n    \n      framework = new NiiVue(window.nv);\n    \n    } else if (Util.is_defined(window.niivue)) {\n      \n      framework = new NiiVue(window.niivue);\n\n    } else if (Util.is_defined(window.cornerstone)) {\n\n      framework = new Cornerstone2D(window.cornerstone);\n\n    } else if (Util.is_defined(window.r)) {\n        \n      framework = new Xtk(window.r);\n      \n    } else if (Util.is_defined(window.OpenSeadragon)) {\n\n      framework = new OpenSeaDragon(window.OpenSeadragon);\n      \n    } else if (Util.is_defined(window.papayaContainers)) {\n      framework = new Papaya(window.papayaContainers)\n    }\n\n    // TODO: fallback to general canvas or webgl framework\n\n    return framework;\n\n  }\n\n  static async load_script(url, callback) {\n\n    // introducing hack to make it work for openneuro\n    window.Object.defineProperty(window.Object.prototype, 'global', {\n      get( ){\n        return window;\n      },\n      set(newGlobal) {\n        globalThis = newGlobal;\n      }\n    });\n\n    const script = window.document.createElement(\"script\")\n    script.type = \"text/javascript\"\n    script.src = url;\n\n    if (Util.is_defined(callback)) {\n      script.onload = callback;\n    }\n\n    window.document.head.appendChild(script);\n    eval(script);\n\n  }\n\n  static async send_http_post(url, data, callback) {\n\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        // request done\n        callback( xhr.response );\n\n        return;\n\n      }\n    }\n\n    xhr.send(data)\n\n  }\n\n  static convert_to_png(uint8array, width, height, flip) {\n\n    // we are using an offscreen canvas for this\n    let offscreen = window.document.createElement('canvas');\n    offscreen.width = width;\n    offscreen.height = height;\n\n    let offscreen_ctx = offscreen.getContext('2d');\n\n    let imgdata = offscreen_ctx.createImageData(offscreen.width, offscreen.height);\n    let pxdata = imgdata.data;\n\n    for (var i =0; i<pxdata.length;i++) {\n        \n      pxdata[i] = uint8array[i];\n\n    }\n      // update canvas with new data\n    offscreen_ctx.putImageData(imgdata, 0, 0);\n    \n\n    if (flip) {\n\n      offscreen_ctx.save();\n      offscreen_ctx.scale(1, -1); // Flip vertically\n      offscreen_ctx.drawImage(offscreen, 0, -height); \n      offscreen_ctx.restore();\n\n    }\n\n    let base64 = offscreen.toDataURL('image/png');\n\n    // for debugging, download image\n    // const link = window.document.createElement(\"a\");\n    // link.href = base64;\n    // link.download = 'test.png';\n    // link.click();\n\n    base64 = base64.replace(\"data:image/png;base64,\",\"\");\n\n    let pngpixels = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n\n    return pngpixels;\n\n  }\n\n  static filter(pixels, width, height, kernel) {\n\n    const kernelSize = Math.sqrt(kernel.length);\n    const halfKernelSize = Math.floor(kernelSize / 2);\n\n    const new_pixels = pixels.slice();\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const dstIndex = y * width + x;\n\n        let newValue = 0;\n        for (let ky = 0; ky < kernelSize; ky++) {\n          for (let kx = 0; kx < kernelSize; kx++) {\n            const srcX = x + kx - halfKernelSize;\n            const srcY = y + ky - halfKernelSize;\n            const srcIndex = srcY * width + srcX;\n\n            const kernelValue = kernel[ky * kernelSize + kx];\n            newValue += pixels[srcIndex] * kernelValue;\n          }\n        }\n\n        new_pixels[dstIndex] = newValue;\n\n      }\n    }\n\n    return new_pixels;\n\n  }\n\n  static grayscale_to_rgba(grayscale) {\n\n    const rgba = new Uint8Array(grayscale.length * 4);\n\n    for (let i = 0; i < grayscale.length; i++) {\n      const g = grayscale[i];\n      const index = i * 4;\n\n      rgba[index] = g;\n      rgba[index + 1] = g;\n      rgba[index + 2] = g;\n      rgba[index + 3] = 255; \n    }\n\n    return rgba;\n\n  }\n\n  static rgba_to_grayscale(rgba) {\n\n    const grayscale = new Uint8Array(rgba.length / 4);\n\n    for (let i = 0; i < rgba.length; i += 4) {\n\n      grayscale[i / 4] = rgba[i];\n\n    }\n\n    return grayscale;\n\n  }\n\n  /**\n   * Harden a mask into a grayscale pixel array.\n   * \n   * pixels needs to be RGBA\n   * \n   * and mask binary.\n   * \n   * maskcolor is optional and falls back to blue.\n   * \n   **/\n  static harden_mask(pixels, mask, maskcolor) {\n\n    // Modified from: https://github.com/facebookresearch/segment-anything/blob/40df6e4046d8b07ab8c4519e083408289eb43032/demo/src/components/helpers/maskUtils.tsx\n    // Copyright (c) Meta Platforms, Inc. and affiliates.\n    // All rights reserved.\n\n\n    let maskcolor_ = [0, 114, 189, 255];\n\n    if (Util.is_defined(maskcolor)) {\n      \n      maskcolor_ = maskcolor;\n      \n    } \n\n    for (var i = 0; i < mask.length; i++) {\n\n      if (mask[i] > 0.0) {\n        pixels[4 * i + 0] = maskcolor_[0];\n        pixels[4 * i + 1] = maskcolor_[1];\n        pixels[4 * i + 2] = maskcolor_[2];\n        pixels[4 * i + 3] = maskcolor_[3];\n      }\n\n    }\n\n    return pixels;\n\n  }\n\n  static is_defined(variable) {\n\n    return (typeof variable != 'undefined');\n\n  }\n  \n  // \"Boostlet Tooltips\" - This is a hint mechanism that allows to display a message for a certain amount of time (ms).\n  static hint(message, duration) {\n\n    let hint = window.document.createElement('div');\n    hint.id = 'BoostletHint';\n\n    hint.style.position = 'fixed';\n    hint.style.left = '10px';\n    hint.style.top = '10px';\n    hint.style.padding = '10px';\n    hint.style.background = '#fff';\n    hint.style.color = '#000';\n    hint.style.zIndex = '100000';\n    hint.style.border = '1px solid #007ec6';\n    hint.style.borderRadius = '5px';\n    hint.style.boxShadow = '0px 0px 20px 5px rgba(0,0,0, 0.3)';\n    hint.style.fontSize = '14px';\n    hint.style.fontWeight = 'bold';\n    hint.style.textAlign = 'center';\n\n    hint.innerHTML = message;\n    \n    window.document.body.appendChild(hint);\n\n    if (typeof duration === 'number' && duration > 0) {\n      setTimeout(function() {\n        hint.remove();\n      }, duration);\n    }\n\n  }\n\n}","import {Util} from './util.js';\n\nexport class Framework {\n\n  constructor(instance) {\n\n    this.name = 'generic';\n    this.instance = instance;\n\n    this.flip_on_png = false;\n\n  }\n\n  get_image(from_canvas) {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  set_image(new_pixels) {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  set_mask(new_mask) {\n\n    throw \"Missing Implementation.\";\n    \n  }\n\n  select_box(callback) {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  convert_to_png(uint8array, width, height) {\n\n    return Util.convert_to_png(uint8array, width, height, this.flip_on_png);\n\n  }\n\n}\n","import { Framework } from \"../framework.js\";\n\nimport { Util } from \"../util.js\";\n\nexport class Cornerstone2D extends Framework {\n  constructor(instance) {\n    super(instance);\n    this.name = \"cornerstone2D\";\n\n    this.cornerstonetools_instance = null;\n\n    if (typeof window.cornerstoneTools != \"undefined\") {\n      // TODO probably not too robust\n      this.cornerstonetools_instance = window.cornerstoneTools;\n    }\n\n    this.flip_on_png = false;\n  }\n\n  get_image(from_canvas) {\n    let element = this.instance.getEnabledElements()[0];\n    let pixels = null;\n    let width = null;\n    let height = null;\n\n    if (typeof from_canvas != \"undefined\") {\n      // TODO this is hacky going through the canvas\n      // later should grab the real volume data\n\n      let canvas = element.canvas;\n      width = canvas.width;\n      height = canvas.height;\n\n      let ctx = canvas.getContext(\"2d\");\n\n      let imagedata = ctx.getImageData(0, 0, width, height);\n      pixels = imagedata.data;\n    } else {\n      // this is the real image slice data\n      let imagedata = element.image;\n      pixels = imagedata.getPixelData();\n      width = imagedata.width;\n      height = imagedata.height;\n    }\n\n    return { data: pixels, width: width, height: height };\n  }\n\n  set_image(new_pixels) {\n    let element = this.instance.getEnabledElements()[0];\n    let pixels = element.image.getPixelData();\n\n    // Set the new pixel values\n    pixels.set(new_pixels);\n\n    // Re-render the current slice\n    cornerstone.renderGrayscaleImage(element, true);\n  }\n\n  set_mask(new_mask) {\n    // TODO this needs to use segmentation/labelmap layers\n    // from cornerstone\n    // right now, this is modifying the canvas\n\n    let element = this.instance.getEnabledElements()[0];\n\n    let canvas = element.canvas;\n    width = canvas.width;\n    height = canvas.height;\n\n    let ctx = canvas.getContext(\"2d\");\n\n    let imagedata = ctx.getImageData(0, 0, width, height);\n    let pixels = imagedata.data;\n\n    let masked_image = Util.harden_mask(pixels, new_mask);\n\n    let masked_image_as_imagedata = new ImageData(masked_image, width, height);\n\n    ctx.putImageData(masked_image_as_imagedata, 0, 0);\n  }\n\n  // select_box(callback) {\n\n  //   this.cornerstonetools_instance.setToolActive('RectangleRoi', { mouseButtonMask: 1 })\n\n  //   let element = this.instance.getEnabledElements()[0];\n  //   let canvas = element.canvas;\n\n  //   canvas.onmouseup = function() {\n\n  //     let state = this.cornerstonetools_instance.globalImageIdSpecificToolStateManager.saveToolState();\n\n  //     let topleft = state[Object.keys(state).pop()].RectangleRoi.data[0].handles.start;\n  //     let bottomright = state[Object.keys(state).pop()].RectangleRoi.data[0].handles.end;\n\n  //     let topleft_c = this.instance.pixelToCanvas(element.element, topleft);\n  //     let bottomright_c = this.instance.pixelToCanvas(element.element, bottomright);\n\n  //     this.cornerstonetools_instance.clearToolState(element.element, 'RectangleRoi');\n  //     this.instance.renderGrayscaleImage(element, true);\n\n  //     callback(topleft_c, bottomright_c);\n\n  //   }.bind(this);\n\n  // }\n\n  select_box(callback) {\n    let element = this.instance.getEnabledElements()[0];\n    let canvas = element.canvas;\n    // Disable the Wwwc tool \n    cornerstoneTools.setToolDisabled('Wwwc');\n\n    BoxCraft.createDraggableBBox(canvas, function (topleft, bottomright) {\n      console.log(\"Inside Draggable BBox\", topleft, bottomright);\n      callback(topleft, bottomright);\n    });\n\n    // BoxCraft.createResizableBBox(canvas, function(topleft, bottomright) {\n    //   console.log(\"Inside Draggable BBox\",topleft, bottomright);\n    //   callback(topleft, bottomright);\n    // });\n  }\n}\n","import { Framework } from \"../framework.js\";\n\nimport { Util } from \"../util.js\";\n\nexport class NiiVue extends Framework {\n  constructor(instance) {\n    super(instance);\n    this.name = \"niivue\";\n\n    this.flip_on_png = true;\n\n    this.onMouseDown = false;\n    this.x1 = null;\n    this.y1 = null;\n    this.x2 = null;\n    this.y2 = null;\n  }\n\n  get_image(from_canvas) {\n    let element = this.instance.canvas;\n    let pixels = null;\n    let width = null;\n    let height = null;\n\n    // TODO this is hacky going through the canvas\n    // later should grab the real volume data\n\n    let old_crosshaircolor = this.instance.opts.crosshairColor;\n    let old_crosshairwidth = this.instance.opts.crosshairWidth;\n\n    this.instance.setCrosshairColor([0, 0, 0, 0]);\n    this.instance.opts.crosshairWidth = 0;\n    this.instance.updateGLVolume();\n\n    let ctx = this.instance.gl;\n\n    width = ctx.drawingBufferWidth;\n    height = ctx.drawingBufferHeight;\n\n    pixels = new Uint8Array(width * height * 4);\n    ctx.readPixels(0, 0, width, height, ctx.RGBA, ctx.UNSIGNED_BYTE, pixels);\n\n    // restore crosshairs\n    this.instance.setCrosshairColor(old_crosshaircolor);\n    this.instance.opts.crosshairWidth = old_crosshairwidth;\n\n    if (!Util.is_defined(from_canvas)) {\n      // convert rgba pixels to grayscale\n      pixels = Util.rgba_to_grayscale(pixels);\n    } else {\n      // TODO\n      // not easily possible yet\n      // we could hack it using\n      // nv.back.get_value(x,y,z)\n      // based on the dimensions\n      // nv.back.dims.slice(1);\n      // but devs promised easy access in the future\n    }\n\n    return { data: pixels, width: width, height: height };\n  }\n\n  /**\n   * Sets the NiiVue.js image.\n   *\n   * If is_rgba==true, we do *not* convert to RGBA before setting on canvas.\n   **/\n  set_image(new_pixels, is_rgba, no_flip) {\n    // TODO this is hacky since we dont work with the real volume yet\n    // create new canvas\n    // put pixels on canvas\n    // show canvas\n    // hide on click\n\n    let originalcanvas = this.instance.canvas;\n\n    let newcanvas = window.document.createElement(\"canvas\");\n    newcanvas.width = originalcanvas.width;\n    newcanvas.height = originalcanvas.height;\n\n    // put new_pixels down\n    let ctx = newcanvas.getContext(\"2d\");\n\n    let new_pixels_rgba = null;\n\n    if (Util.is_defined(is_rgba)) {\n      new_pixels_rgba = new_pixels;\n    } else {\n      new_pixels_rgba = Util.grayscale_to_rgba(new_pixels);\n    }\n\n    let new_pixels_clamped = new Uint8ClampedArray(new_pixels_rgba);\n\n    let new_image_data = new ImageData(\n      new_pixels_clamped,\n      newcanvas.width,\n      newcanvas.height\n    );\n\n    ctx.putImageData(new_image_data, 0, 0);\n\n    if (!Util.is_defined(no_flip)) {\n      // some flipping action\n      ctx.save();\n      ctx.scale(1, -1);\n      ctx.drawImage(newcanvas, 0, -newcanvas.height);\n      ctx.restore();\n    }\n\n    newcanvas.onclick = function () {\n      // on click, we will restore the nv canvas\n      newcanvas.parentNode.replaceChild(originalcanvas, newcanvas);\n    };\n\n    // replace nv canvas with new one\n    // originalcanvas.parentNode.replaceChild(newcanvas, originalcanvas);\n    newcanvas.style.width = originalcanvas.clientWidth + \"px\";\n    newcanvas.style.height = originalcanvas.clientHeight + \"px\";\n    originalcanvas.parentNode.replaceChild(newcanvas, originalcanvas);\n  }\n\n  set_mask(new_mask) {\n    // merge image + mask\n    // and then call set_image with that information\n\n    let image = this.get_image(true);\n\n    // TODO here we need to flip one more time, this is until\n    // we use the official niivue infrastructure for adding\n    // a segmentation layer\n    let originalcanvas = this.instance.canvas;\n\n    let newcanvas = window.document.createElement(\"canvas\");\n    newcanvas.width = originalcanvas.width;\n    newcanvas.height = originalcanvas.height;\n    // put new_pixels down\n    let ctx = newcanvas.getContext(\"2d\");\n    let imageclamped = new Uint8ClampedArray(image.data);\n    let imagedata = new ImageData(imageclamped, image.width, image.height);\n    ctx.putImageData(imagedata, 0, 0);\n    ctx.save();\n    ctx.scale(1, -1);\n    ctx.drawImage(newcanvas, 0, -newcanvas.height);\n    ctx.restore();\n    image = ctx.getImageData(0, 0, newcanvas.width, newcanvas.height);\n    // end of flip\n\n    let masked_image = Util.harden_mask(image.data, new_mask);\n\n    this.set_image(masked_image, true, true); // rgba data, no flip\n  }\n\n  // select_box(callback) {\n\n  //   // TODO also hacky until official API supports this\n\n  //   let canvas = this.instance.canvas;\n\n  //   canvas.addEventListener('mousedown', function (e) {\n  //     this.isMouseDown = true;\n\n  //     var rect = e.currentTarget.getBoundingClientRect(),\n  //     offsetX = e.clientX * window.devicePixelRatio - rect.left * window.devicePixelRatio,\n  //     offsetY = e.clientY * window.devicePixelRatio - rect.top * window.devicePixelRatio;\n\n  //     this.x1 = offsetX;\n  //     this.y1 = offsetY;\n  //   }.bind(this));\n\n  //   canvas.addEventListener('mousemove', function (e) {\n  //     if (this.isMouseDown) {\n\n  //       var rect = e.currentTarget.getBoundingClientRect(),\n  //       offsetX = e.clientX * window.devicePixelRatio - rect.left * window.devicePixelRatio,\n  //       offsetY = e.clientY * window.devicePixelRatio - rect.top * window.devicePixelRatio;\n\n  //       this.x2 = offsetX;\n  //       this.y2 = offsetY;\n  //       this.instance.drawSelectionBox([this.x1, this.y1, this.x2-this.x1, this.y2-this.y1]);\n  //     }\n  //   }.bind(this));\n\n  //   canvas.addEventListener('mouseup', function (e) {\n  //     var rect = e.currentTarget.getBoundingClientRect(),\n  //     offsetX = e.clientX * window.devicePixelRatio - rect.left * window.devicePixelRatio,\n  //     offsetY = e.clientY * window.devicePixelRatio - rect.top * window.devicePixelRatio;\n\n  //     this.x2 = offsetX;\n  //     this.y2 = offsetY;\n  //     this.isMouseDown = false;\n\n  //     let topleft = {x: this.x1, y: this.y1};\n  //     let bottomright = {x: this.x2, y: this.y2};\n\n  //     callback(topleft, bottomright);\n\n  //   }.bind(this));\n\n  // }\n\n  select_box(callback) {\n    let canvas = this.instance.canvas;\n\n    BoxCraft.createDraggableBBox(canvas, function (topleft, bottomright) {\n      console.log(\"Inside Draggable BBox\", topleft, bottomright);\n      callback(topleft, bottomright);\n    });\n\n    // BoxCraft.createResizableBBox(canvas, function(topleft, bottomright) {\n    //   console.log(\"Inside Draggable BBox\",topleft, bottomright);\n    //   callback(topleft, bottomright);\n    // });\n  }\n}\n","import { Framework } from \"../framework.js\";\n\nimport { Util } from \"../util.js\";\n\nexport class OpenSeaDragon extends Framework {\n  constructor(instance) {\n    super(instance);\n    this.name = \"opensedragon\";\n  }\n\n  get_image(from_canvas) {\n    // TODO needs to be generic and executed with Boostlet.init\n\n    let viewer = null;\n    let vs = this.instance._viewers;\n    vs.forEach(function (e) {\n      if (e.id == \"viewer\") {\n        viewer = e;\n      }\n    });\n\n    if (!viewer) {\n      throw \"OpenSeaDragon viewer not found.\";\n    }\n\n    let canvas = viewer.canvas.children[0];\n    let ctx = canvas.getContext(\"2d\");\n\n    let image = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let rgba_image = Util.rgba_to_grayscale(image.data);\n    let pixels = image.data;\n\n    if (from_canvas) {\n      return { data: pixels, width: image.width, height: image.height };\n    } else {\n      return { data: rgba_image, width: image.width, height: image.height };\n    }\n  }\n\n  set_image(new_pixels) {\n    let viewer = null;\n    let vs = this.instance._viewers;\n    vs.forEach(function (e) {\n      if (e.id == \"viewer\") {\n        viewer = e;\n      }\n    });\n\n    if (!viewer) {\n      throw \"OpenSeaDragon viewer not found.\";\n    }\n\n    let canvas = viewer.canvas.children[0];\n    let ctx = canvas.getContext(\"2d\");\n    let new_image = new ImageData(\n      new Uint8ClampedArray(Util.grayscale_to_rgba(new_pixels)),\n      image.width,\n      image.height\n    );\n\n    ctx.putImageData(new_image, 0, 0);\n  }\n\n  set_mask(new_mask) {\n    let viewer = null;\n    let vs = this.instance._viewers;\n    vs.forEach(function (e) {\n      if (e.id == \"viewer\") {\n        viewer = e;\n      }\n    });\n\n    if (!viewer) {\n      throw \"OpenSeaDragon viewer not found.\";\n    }\n\n    let canvas = viewer.canvas.children[0];\n    width = canvas.width;\n    height = canvas.height;\n\n    let ctx = canvas.getContext(\"2d\");\n    let imagedata = ctx.getImageData(0, 0, width, height);\n    let pixels = imagedata.data;\n\n    let masked_image = Util.harden_mask(pixels, new_mask);\n\n    // console.log(masked_image);\n\n    let masked_image_as_imagedata = new ImageData(masked_image, width, height);\n\n    // console.log(masked_image_as_imagedata);\n\n    ctx.putImageData(masked_image_as_imagedata, 0, 0);\n  }\n\n  // select_box(callback) {\n\n  //     // alert(\"Click on top left and bottom rght coordinated of the desired selection box.\")\n  //   let isFirstClick = true;\n  //   let x1, y1, x2, y2;\n\n  //   // Function to handle the mouse click event\n  //   function handleClick(event) {\n  //     if (isFirstClick) {\n  //       // Capture x1 and y1 on the first click\n  //       x1 = event.clientX;\n  //       y1 = event.clientY;\n  //       console.log(`First click: (X1: ${x1}, Y1: ${y1})`);\n  //       isFirstClick = false;\n  //     } else {\n  //       // Capture x2 and y2 on the second click\n  //       x2 = event.clientX;\n  //       y2 = event.clientY;\n  //       console.log(`Second click: (X2: ${x2}, Y2: ${y2})`);\n  //       isFirstClick = true;\n\n  //         let topleft = {x: x1, y: y1};\n  //         let bottomright = {x: x2, y: y2};\n\n  //         callback(topleft, bottomright);\n  //     }\n\n  //     // let topleft = {x: 529, y: 480};\n  //     // let bottomright = {x: 667, y: 588};\n  //     // callback(topleft, bottomright);\n\n  //   }\n\n  //   // Add a click event listener to the document\n  //   document.addEventListener(\"click\", handleClick);\n\n  // }\n\n  select_box(callback) {\n    let viewer = null;\n    let vs = this.instance._viewers;\n    vs.forEach(function (e) {\n      if (e.id == \"viewer\") {\n        viewer = e;\n      }\n    });\n\n    if (!viewer) {\n      throw \"OpenSeaDragon viewer not found.\";\n    }\n\n    let canvas = viewer.canvas;\n\n    BoxCraft.createDraggableBBox(canvas, function (topleft, bottomright) {\n      console.log(\"Inside Draggable BBox\", topleft, bottomright);\n      callback(topleft, bottomright);\n    });\n\n    // BoxCraft.createResizableBBox(canvas, function(topleft, bottomright) {\n    //   console.log(\"Inside Draggable BBox\",topleft, bottomright);\n    //   callback(topleft, bottomright);\n    // });\n  }\n}\n","import { Framework } from \"../framework.js\";\n\nimport { Util } from \"../util.js\";\n\nexport class Xtk extends Framework {\n  constructor(instance) {\n    super(instance);\n    this.name = \"xtk\";\n  }\n\n  get_image(from_canvas) {\n    let canvas = this.instance.ca;\n    let ctx = canvas.getContext(\"2d\");\n\n    let image = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let rgba_image = Util.rgba_to_grayscale(image.data);\n\n    return { data: rgba_image, width: image.width, height: image.height };\n    // return {'data':pixels, 'width':image.width, 'height':image.height};\n  }\n\n  set_image(new_pixels) {\n    let originalcanvas = this.instance.ca;\n\n    let newcanvas = window.document.createElement(\"canvas\");\n    newcanvas.width = originalcanvas.width;\n    newcanvas.height = originalcanvas.height;\n\n    let ctx = newcanvas.getContext(\"2d\");\n\n    let newPixelsRgba = Util.grayscale_to_rgba(new_pixels);\n\n    let newPixelsClamped = new Uint8ClampedArray(newPixelsRgba);\n\n    let newImageData = new ImageData(\n      newPixelsClamped,\n      newcanvas.width,\n      newcanvas.height\n    );\n\n    // Draw the new image data onto the canvas\n    ctx.putImageData(newImageData, 0, 0);\n\n    newcanvas.onclick = function () {\n      // on click, we will restore the nv canvas\n      newcanvas.parentNode.replaceChild(originalcanvas, newcanvas);\n    };\n\n    // replace nv canvas with new one\n    originalcanvas.parentNode.replaceChild(newcanvas, originalcanvas);\n  }\n\n  set_mask(new_mask) {\n    let image = this.get_image();\n\n    // TODO here we need to flip one more time, this is until\n    // we use the official niivue infrastructure for adding\n    // a segmentation layer\n    let originalcanvas = this.instance.ca;\n\n    let newcanvas = window.document.createElement('canvas');\n    newcanvas.width = originalcanvas.width;\n    newcanvas.height = originalcanvas.height;\n    \n    // put new_pixels down\n    let ctx = newcanvas.getContext('2d');\n\n    let imageclamped = new Uint8ClampedArray(image.data);\n\n    let imagedata = new ImageData(imageclamped, image.width, image.height);\n\n    ctx.putImageData(imagedata, 0, 0);\n\n    ctx.save();\n    ctx.scale(1, -1);\n    ctx.drawImage(newcanvas, 0, -newcanvas.height);\n    ctx.restore();\n\n    image = ctx.getImageData(0, 0, newcanvas.width, newcanvas.height);\n    // end of flip\n\n    let masked_image = Util.harden_mask(image.data, new_mask);\n\n    this.set_image(masked_image); // rgba data, no flip\n  }\n\n  select_box(callback) {\n    // alert(\"Click on top left and bottom rght coordinated of the desired selection box.\")\n    let isFirstClick = true;\n    let x1, y1, x2, y2;\n\n    // Function to handle the mouse click event\n    function handleClick(event) {\n      if (isFirstClick) {\n        // Capture x1 and y1 on the first click\n        x1 = event.clientX;\n        y1 = event.clientY;\n        console.log(`First click: (X1: ${x1}, Y1: ${y1})`);\n        isFirstClick = false;\n      } else {\n        // Capture x2 and y2 on the second click\n        x2 = event.clientX;\n        y2 = event.clientY;\n        console.log(`Second click: (X2: ${x2}, Y2: ${y2})`);\n        isFirstClick = true;\n\n        let topleft = { x: x1, y: y1 };\n        let bottomright = { x: x2, y: y2 };\n\n        callback(topleft, bottomright);\n      }\n\n      // let topleft = {x: 529, y: 480};\n      // let bottomright = {x: 667, y: 588};\n      // callback(topleft, bottomright);\n    }\n\n    // Add a click event listener to the document\n    document.addEventListener(\"click\", handleClick);\n  }\n}\n","import { Framework } from \"../framework.js\";\n\nimport { Util } from \"../util.js\";\n\nexport class Papaya extends Framework {\n  constructor(instance) {\n    super(instance);\n    this.name = \"papaya\";\n  }\n\n  get_image(from_canvas) {\n    let canvas = this.instance[0].viewer.canvas;\n    let ctx = canvas.getContext(\"2d\");\n\n    let image = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let rgba_image = Util.rgba_to_grayscale(image.data)\n\n    return { data: rgba_image, width: image.width, height: image.height };\n    // return {'data':pixels, 'width':image.width, 'height':image.height};\n  }\n\n  set_image(new_pixels) {\n    let originalcanvas = this.instance[0].viewer.canvas;\n\n    let newcanvas = window.document.createElement(\"canvas\");\n    newcanvas.width = originalcanvas.width;\n    newcanvas.height = originalcanvas.height;\n\n    let ctx = newcanvas.getContext(\"2d\");\n\n    let newPixelsRgba = Util.grayscale_to_rgba(new_pixels);\n\n    let newPixelsClamped = new Uint8ClampedArray(newPixelsRgba);\n\n    let newImageData = new ImageData(\n      newPixelsClamped,\n      newcanvas.width,\n      newcanvas.height\n    );\n\n    // Draw the new image data onto the canvas\n    ctx.putImageData(newImageData, 0, 0);\n\n    newcanvas.onclick = function () {\n      // on click, we will restore the nv canvas\n      newcanvas.parentNode.replaceChild(originalcanvas, newcanvas);\n    };\n\n    // replace nv canvas with new one\n    originalcanvas.parentNode.replaceChild(newcanvas, originalcanvas);\n  }\n}\n","\nimport {Boostlet} from \"./boostlet.js\"\n\nwindow.console.log('BOOSTLET VERSION 0.1-beta');\n\n// register global namespace with a new boostlet instance\n// later we might want to support multiple active boostlets\nwindow.Boostlet = new Boostlet();\n","import {Util} from './util.js';\n\nimport {Framework} from './framework.js';\n\nexport class Boostlet {\n\n  constructor() {\n\n    this.framework = null;\n\n  }\n\n  /**\n   * Initializes the Boostlet.\n   * \n   * This includes several steps such as identifying the \n   * visualization/rendering framework that is available. \n   * \n   * TODO: Later we want to have fallbacks in place if the framework\n   * is not detected.\n   * \n   */\n  init(name, instance) {\n\n    if (typeof name != 'undefined' && typeof instance != 'undefined') {\n\n      console.log('Framework forced by user!');\n      throw \"Forced Framework Not Implemented.\";\n      // TODO\n\n    } else {\n\n      this.framework = Util.detect_framework();\n\n    }\n\n    if (this.framework) {\n\n      console.log('Found', this.framework, '!')\n    \n    } else {\n\n      throw \"Framework Not Found.\";\n\n    }\n\n  }\n\n  /**\n   * Let's the user select a region of interest box.\n   */\n  async select_box(callback) {\n\n    this.framework.select_box(callback);\n\n  }\n\n  /**\n   * Let's the user select (multiple) seeds.\n   */\n  async select_seed(howmany) {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  /**\n   * Loads an external javascript file asynchronously. \n   */\n  async load_script(url, callback) {\n\n    Util.load_script(url, callback);\n\n  }\n\n  /**\n   * Sends a HTTP POST request to a url with some data.\n   */\n  async send_http_post(url, data, callback) {\n\n    Util.send_http_post(url, data, callback);\n\n  }\n\n  /**\n   * Gets the current image (2D).\n   * \n   * TODO: Optional bounding box should be supported.\n   * \n   */\n  get_image(from_canvas) {\n\n    return this.framework.get_image(from_canvas);\n\n  }\n\n  /**\n   * Sets the current image (2D).\n   * \n   */\n  set_image(new_pixels) {\n\n    return this.framework.set_image(new_pixels);\n\n  }\n\n  /**\n   * Sets the current mask (2D).\n   * \n   */\n  set_mask(new_mask) {\n\n    return this.framework.set_mask(new_mask);\n\n  }\n\n  /**\n   * Encode raw image data to PNG.\n   */\n  convert_to_png(uint8array, width, height) {\n\n    return this.framework.convert_to_png(uint8array, width, height);\n\n  }\n\n  filter(pixels, width, height, kernel) {\n\n    return Util.filter(pixels, width, height, kernel);\n\n  }\n\n  /**\n   * Displays a small div located at the top left     corner of the screen with message and will disappear after the specified time (ms).\n   * \n   */\n  hint(message, duration) {\n\n    return Util.hint(message, duration);\n\n  }\n\n}\n"],"names":[],"version":3,"file":"boostlet.min.js.map"}